import { Link } from "react-router-dom";
import { useState, useEffect, useRef } from "react";
import { ImageCarousel } from "./ImageCarousel";
import "../css/home.css"; // ƒê·∫£m b·∫£o import file CSS

const HomePage = () => {
  const [activeTab, setActiveTab] = useState("de-an");
  const [showDropdown, setShowDropdown] = useState(false);
  const dropdownRef = useRef<HTMLDivElement>(null);

  // TODO: Replace with actual data from the database
  const schools = [
    {
      id: 1,
      name: "Tr∆∞·ªùng ƒê·∫°i H·ªçc H√†ng H·∫£i Vi·ªát Nam",
      logo: "/school-logos/maritime.png",
    },
    {
      id: 2,
      name: "Tr∆∞·ªùng ƒê·∫°i H·ªçc C√¥ng Ngh·ªá - ƒê·∫°i H·ªçc Qu·ªëc Gia H√† N·ªôi",
      logo: "/school-logos/uet.png",
    },
    {
      id: 3,
      name: "Tr∆∞·ªùng ƒê·∫°i H·ªçc Khoa H·ªçc X√£ H·ªôi v√† Nh√¢n VƒÉn H√† N·ªôi",
      logo: "/school-logos/ussh.png",
    },
    {
      id: 4,
      name: "Tr∆∞·ªùng ƒê·∫°i H·ªçc Khoa H·ªçc T·ª± Nhi√™n H√† N·ªôi",
      logo: "/school-logos/hus.png",
    },
    {
      id: 5,
      name: "Tr∆∞·ªùng Khoa h·ªçc li√™n ng√†nh v√† Ngh·ªá thu·∫≠t H√† N·ªôi",
      logo: "/school-logos/isi.png",
    },
    {
      id: 6,
      name: "Tr∆∞·ªùng Qu·∫£n Tr·ªã v√† Kinh Doanh - ƒêHQG H√† N·ªôi",
      logo: "/school-logos/hsb.png",
    },
    {
      id: 7,
      name: "Tr∆∞·ªùng ƒê·∫°i h·ªçc Y D∆∞·ª£c - ƒêHQG H√† N·ªôi",
      logo: "/school-logos/hmu.png",
    },
    {
      id: 8,
      name: "Tr∆∞·ªùng Qu·ªëc T·∫ø - ƒêHQG H√† N·ªôi",
      logo: "/school-logos/is.png",
    },
  ];

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target as Node)
      ) {
        setShowDropdown(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, []);

  return (
    <div className="home-container">
      <ImageCarousel />

      {/* Hero Section */}
      <section className="hero-section">
        <div className="container">
          <div className="hero-content">
            {/* Tab Navigation */}
            <div className="tab-navigation">
              <button
                className={`tab-button ${
                  activeTab === "de-an" ? "active" : ""
                }`}
                onClick={() => setActiveTab("de-an")}
              >
                ƒê·ªÅ √°n
              </button>
              <button
                className={`tab-button ${
                  activeTab === "diem-chuan" ? "active" : ""
                }`}
                onClick={() => setActiveTab("diem-chuan")}
              >
                ƒêi·ªÉm chu·∫©n
              </button>
              <button
                className={`tab-button ${
                  activeTab === "khoi-mon" ? "active" : ""
                }`}
                onClick={() => setActiveTab("khoi-mon")}
              >
                Kh·ªëi - T·ªï h·ª£p m√¥n
              </button>
              <button
                className={`tab-button ${
                  activeTab === "nganh" ? "active" : ""
                }`}
                onClick={() => setActiveTab("nganh")}
              >
                Danh s√°ch ng√†nh
              </button>
            </div>

            {/* Search Box */}
            <div className="search-container" ref={dropdownRef}>
              <div className="search-box">
                <input
                  type="text"
                  placeholder="Nh·∫≠p t√™n tr∆∞·ªùng/m√£ tr∆∞·ªùng ƒë·ªÉ xem ƒë·ªÅ √°n"
                  className="search-input"
                  onFocus={() => setShowDropdown(true)}
                />
                <button className="search-button" aria-label="Search">
                  <SearchIcon className="icon-small" />
                </button>
              </div>

              {/* Dropdown Schools */}
              {showDropdown && (
                <div className="school-dropdown">
                  {schools.map((school) => (
                    <button
                      key={school.id}
                      className="school-item"
                      onClick={() => {
                        setShowDropdown(false);
                      }}
                    >
                      <div className="school-content">
                        <img
                          src={school.logo}
                          alt={school.name}
                          className="school-logo"
                          onError={(e) => {
                            const target = e.target as HTMLImageElement;
                            target.src = "https://placehold.co/40x40?text=Logo";
                          }}
                        />
                        <div className="school-info">
                          <p className="school-name">{school.name}</p>
                          <p className="school-id">M√£ tr∆∞·ªùng: {school.id}</p>
                        </div>
                      </div>
                      <svg
                        className="arrow-icon"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M9 5l7 7-7 7"
                        />
                      </svg>
                    </button>
                  ))}
                </div>
              )}

              <div className="search-alt">
                Ho·∫∑c{" "}
                <Link to="/search" className="search-link">
                  T√¨m theo ƒë·ªãa ph∆∞∆°ng ho·∫∑c ng√†nh
                </Link>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="features-section">
        <div className="container">
          <h2 className="section-title">
            <span className="text-gradient">EDUPATH.COM</span> S·∫º GI√öP C√ÅC EM
          </h2>
          <div className="feature-grid">
            <FeatureCard
              icon="üìö"
              title="Tra c·ª©u ƒë·ªÅ √°n tuy·ªÉn sinh"
              description="C·ªßa c√°c tr∆∞·ªùng ƒê·∫°i h·ªçc tr√™n c·∫£ n∆∞·ªõc"
              link="/admission-search"
            />
            <FeatureCard
              icon="üéì"
              title="C√°c ng√†nh ƒë√†o t·∫°o"
              description="Xem danh s√°ch ng√†nh ngh·ªÅ ƒë√†o t·∫°o ƒê·∫°i h·ªçc 2025"
              link="/majors"
            />
            <FeatureCard
              icon="üìã"
              title="Kh·ªëi - T·ªï h·ª£p m√¥n"
              description="Tra c·ª©u ngay c√°c kh·ªëi thi, t·ªï h·ª£p thi ƒê·∫°i h·ªçc ch√≠nh x√°c nh·∫•t"
              link="/subject-combinations"
            />
          </div>
        </div>
      </section>

      {/* Latest Updates Section */}
      <section className="updates-section">
        <div className="container">
          <h2 className="section-title-medium">
            TH√îNG TIN TUY·ªÇN SINH M·ªöI NH·∫§T {new Date().getFullYear()}
          </h2>
          <p className="section-description">
            B·ªô Gi√°o d·ª•c v√† ƒê√†o t·∫°o m·ªõi ƒë√¢y ƒë√£ c√¥ng b·ªë danh m·ª•c 17 ph∆∞∆°ng th·ª©c
            x√©t tuy·ªÉn ƒë·∫°i h·ªçc nƒÉm {new Date().getFullYear()} nh∆∞: X√©t k·∫øt qu·∫£
            thi t·ªët nghi·ªáp THPT, x√©t k·∫øt qu·∫£ h·ªçc t·∫≠p c·∫•p THPT (h·ªçc b·∫°), x√©t k·∫øt
            qu·∫£ thi ƒë√°nh gi√° nƒÉng l·ª±c, x√©t k·∫øt qu·∫£ thi ƒë√°nh gi√° t∆∞ duy...
          </p>
          <div className="exam-grid">
            <ExamTypeCard
              title="HSA"
              subtitle="ƒê√°nh gi√° nƒÉng l·ª±c ƒë·∫°i h·ªçc qu·ªëc gia H√† N·ªôi"
              description="Th√™m c∆° h·ªôi tr√∫ng tuy·ªÉn t·ª´ ph∆∞∆°ng th·ª©c x√©t ƒëi·ªÉm thi HSA ƒë√°nh gi√° nƒÉng l·ª±c ƒêH Qu·ªëc gia H√† N·ªôi c·ªßa 100 tr∆∞·ªùng ƒê·∫°i h·ªçc."
              color="exam-red"
              textColor="text-red"
              icon={<HSAIcon />}
            />
            <ExamTypeCard
              title="V-ACT"
              subtitle="ƒê√°nh gi√° nƒÉng l·ª±c ƒêHQG TP HCM"
              description="EduPath t·ªïng h·ª£p ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng x√©t tuy·ªÉn b·∫±ng ƒëi·ªÉm ƒê√°nh gi√° nƒÉng l·ª±c c·ªßa ƒêHQG TP HCM."
              color="exam-green"
              textColor="text-green"
              icon={<VACTIcon />}
            />
            <ExamTypeCard
              title="TSA"
              subtitle="ƒê√°nh gi√° t∆∞ duy"
              description="G·∫ßn 40 tr∆∞·ªùng ƒë·∫°i h·ªçc s·ª≠ d·ª•ng k·∫øt qu·∫£ thi ƒê√°nh gi√° t∆∞ duy ƒë·ªÉ x√©t tuy·ªÉn nƒÉm 2025."
              color="exam-blue"
              textColor="text-blue"
              icon={<TSAIcon />}
            />
            <ExamTypeCard
              title="H·ªåC B·∫†"
              subtitle="X√©t tuy·ªÉn h·ªçc b·∫°"
              description="EduPath t·ªïng h·ª£p ƒë·∫ßy ƒë·ªß danh s√°ch tr∆∞·ªùng x√©t h·ªçc b·∫° nƒÉm 2025, gi√∫p h·ªçc sinh tƒÉng c∆° h·ªôi ƒê·ªó ƒê·∫°i h·ªçc s·ªõm nh·∫•t."
              color="exam-purple"
              textColor="text-purple"
              icon={<GradeIcon />}
            />
          </div>
        </div>
      </section>

      {/* Recent Admission Announcements Section */}
      <section className="announcements-section">
        <div className="container">
          {/* Main Announcement and Schools */}
          <div className="announcement-box">
            <h2 className="announcement-title">
              Tr∆∞·ªùng ƒë·∫°i h·ªçc m·ªõi c√¥ng b·ªë ƒë·ªÅ √°n tuy·ªÉn sinh{" "}
              {new Date().getFullYear()}
            </h2>
            <p className="announcement-text">
              C√°c tr∆∞·ªùng ƒê·∫°i h·ªçc ƒë√£ b·∫Øt ƒë·∫ßu c√¥ng b·ªë th√¥ng tin tuy·ªÉn sinh nƒÉm{" "}
              {new Date().getFullYear()}. Theo ƒë√≥ ph∆∞∆°ng th·ª©c x√©t tuy·ªÉn c·ªßa c√°c
              tr∆∞·ªùng ƒëa s·ªë g·ªìm: x√©t k·∫øt qu·∫£ thi t·ªët nghi·ªáp THPT, x√©t h·ªçc b·∫°, x√©t
              k·∫øt qu·∫£ thi ƒêGNL, x√©t k·∫øt qu·∫£ thi ƒë√°nh gi√° t∆∞ duy. Ch·ªâ ti√™u tuy·ªÉn
              sinh c·ªßa ng√†nh, t·ªï h·ª£p x√©t tuy·ªÉn c·ªßa ng√†nh ƒë√≥ v√†o c√°c tr∆∞·ªùng c≈©ng
              l√† th√¥ng tin quan tr·ªçng gi√∫p c√°c em c√≥ nh·ªØng l·ª±a ch·ªçn ƒëƒÉng k√Ω x√©t
              tuy·ªÉn v√†o c√°c tr∆∞·ªùng.
            </p>
            <div className="school-grid">
              {schools.map((school) => (
                <Link key={school.id} to="#" className="school-link">
                  <img
                    src={school.logo}
                    alt={school.name}
                    className="school-link-logo"
                    onError={(e) => {
                      const target = e.target as HTMLImageElement;
                      target.src = "https://placehold.co/48x48?text=Logo";
                    }}
                  />
                  <span className="school-link-name">{school.name}</span>
                </Link>
              ))}
            </div>
          </div>

          {/* Other News */}
          <div className="news-box">
            <h3 className="news-title">C√°c tin kh√°c</h3>
            <div className="news-list">
              {[
                `Danh s√°ch tr∆∞·ªùng c√¥ng b·ªë ƒë·ªÅ √°n tuy·ªÉn sinh ${new Date().getFullYear()} - M·ªõi nh·∫•t(24/05/${new Date().getFullYear()})`,
                `Th√¥ng tin tuy·ªÉn sinh ƒê·∫°i h·ªçc VƒÉn h√≥a H√† N·ªôi nƒÉm ${new Date().getFullYear()}(24/05/${new Date().getFullYear()})`,
                `Danh s√°ch c√°c tr∆∞·ªùng m·ªü c·ªïng ƒëƒÉng k√Ω n·ªôp h·ªì s∆° x√©t tuy·ªÉn ${new Date().getFullYear()}(24/05/${new Date().getFullYear()})`,
                `Danh s√°ch c√°c tr∆∞·ªùng ƒê·∫°i h·ªçc x√©t h·ªçc b·∫° ${new Date().getFullYear()} - M·ªõi nh·∫•t(24/05/${new Date().getFullYear()})`,
                `ƒê·∫°i h·ªçc Giao th√¥ng v·∫≠n t·∫£i c√¥ng b·ªë th√¥ng tin tuy·ªÉn sinh ${new Date().getFullYear()}(24/05/${new Date().getFullYear()})`,
              ].map((news, index) => (
                <Link key={index} to="#" className="news-item">
                  <svg
                    className="news-icon"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M17 8l4 4m0 0l-4 4m4-4H3"
                    />
                  </svg>
                  <span className="news-text">{news}</span>
                </Link>
              ))}
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

interface FeatureCardProps {
  icon: string;
  title: string;
  description: string;
  link: string;
}

const FeatureCard = ({ icon, title, description, link }: FeatureCardProps) => (
  <Link to={link} className="feature-card">
    <div className="feature-icon">{icon}</div>
    <h3 className="feature-title">{title}</h3>
    <p className="feature-description">{description}</p>
  </Link>
);

interface ExamTypeCardProps {
  title: string;
  subtitle: string;
  description: string;
  color: string;
  textColor: string;
  icon: React.ReactNode;
}

const ExamTypeCard = ({
  title,
  subtitle,
  description,
  color,
  textColor,
  icon,
}: ExamTypeCardProps) => (
  <div className={`exam-card ${color}`}>
    <div className="exam-icon">{icon}</div>
    <h3 className={`exam-title ${textColor}`}>{title}</h3>
    <h4 className="exam-subtitle">{subtitle}</h4>
    <p className="exam-description">{description}</p>
  </div>
);

// Icons components
const SearchIcon = ({ className = "icon" }) => (
  <svg
    className={className}
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
    />
  </svg>
);

const HSAIcon = () => (
  <svg className="icon-large text-red" viewBox="0 0 24 24" fill="currentColor">
    <path d="M12 14l9-5-9-5-9 5 9 5z" />
    <path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" />
  </svg>
);

const VACTIcon = () => (
  <svg
    className="icon-large text-green"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
  </svg>
);

const TSAIcon = () => (
  <svg className="icon-large text-blue" viewBox="0 0 24 24" fill="currentColor">
    <path d="M13 6v8l4-4-4-4zm-6 4l4 4V6l-4 4z" />
  </svg>
);

const GradeIcon = () => (
  <svg
    className="icon-large text-purple"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z" />
  </svg>
);

export default HomePage;
